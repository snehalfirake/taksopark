@using Taksopark.DAL.Enums
@model Taksopark.MVC.Models.RequestModel

@{
    ViewBag.Title = "GetRequestDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.RequestId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RequesTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RequesTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PhoneNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Status)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartPoint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.StartPoint)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishPoint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.FinishPoint)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.Status == "Active")
                {
                    <button class="abutton pulse width2" style="text-decoration: none;">@Html.ActionLink("Edit", "EditRequest", new { id = Model.RequestId })</button>
                }
                @if (Model.Status != "Closed" && Model.Status != "Rejected")
                {
                    <button class="abutton pulse width2" style="text-decoration: none;">@Html.ActionLink("Discard", "DiscardRequest", new { id = Model.RequestId })</button>
                }
                @if (Model.Status == "Closed" || Model.Status == "Rejected")
                {
                    <button onclick="@Url.Action("Add Comment", "AddComent", new { id = Model.RequestId })" class="abutton pulse width2" style="text-decoration: none;">@Html.ActionLink("Comment", "AddComent", new { id = Model.RequestId })</button>
                }
            </div>
        </div>
        @{
            Html.RenderAction("GetCommentsList", new { requestId = Model.RequestId });
        }
        ;
        @*@{
            Html.RenderPartial("CommentsList", new { requestId = Model.RequestId });
        }*@
    </div>
}

